package ru.wizand.sendernt.presentation

import android.util.Log
import androidx.lifecycle.LiveData
import androidx.lifecycle.MutableLiveData
import androidx.lifecycle.ViewModel
import androidx.lifecycle.viewModelScope
import kotlinx.coroutines.Dispatchers
import kotlinx.coroutines.launch
import ru.wizand.sendernt.data.TelegramRepository

/**
 * ViewModel –¥–ª—è MainActivity.
 * –£–ø—Ä–∞–≤–ª—è–µ—Ç –ª–æ–≥–∏–∫–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram.
 */
class MainViewModel(
    private val telegramRepository: TelegramRepository
) : ViewModel() {

    private val _messageStatus = MutableLiveData<Boolean>()
    val messageStatus: LiveData<Boolean> = _messageStatus

    /**
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Ç–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ Telegram.
     *
     * @param botToken –¢–æ–∫–µ–Ω –±–æ—Ç–∞
     * @param chatId ID Telegram-—á–∞—Ç–∞
     * @param message –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
     */
    fun sendTestMessage(botToken: String, chatId: String, message: String) {
        viewModelScope.launch(Dispatchers.IO) {
            Log.d("MainViewModel", "üöÄ –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Telegram...")
            val success = telegramRepository.sendMessage(botToken, chatId, message)
            _messageStatus.postValue(success)
        }
    }
}
