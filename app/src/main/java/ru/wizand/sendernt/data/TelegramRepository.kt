package ru.wizand.sendernt.data

import android.util.Log
import okhttp3.OkHttpClient
import okhttp3.Request
import java.net.URLEncoder

/**
 * –†–µ–ø–æ–∑–∏—Ç–æ—Ä–∏–π –¥–ª—è –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å Telegram Bot API.
 *
 * –û—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —á–µ—Ä–µ–∑ Telegram-–±–æ—Ç–∞ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π —á–∞—Ç.
 */
class TelegramRepository(
    private val client: OkHttpClient = OkHttpClient()
) {

    companion object {
        private const val BASE_URL = "https://api.telegram.org/bot"
        private const val TAG = "TelegramRepository"
    }

    /**
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —É–∫–∞–∑–∞–Ω–Ω—ã–π Telegram-—á–∞—Ç.
     *
     * @param botToken –¢–æ–∫–µ–Ω Telegram-–±–æ—Ç–∞.
     * @param chatId ID —á–∞—Ç–∞ (–º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —á–µ—Ä–µ–∑ /getUpdates –∏–ª–∏ /start).
     * @param message –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏.
     *
     * @return true –µ—Å–ª–∏ —É—Å–ø–µ—à–Ω–æ, false –µ—Å–ª–∏ –æ—à–∏–±–∫–∞.
     */
    fun sendMessage(botToken: String, chatId: String, message: String): Boolean {
        // –ö–æ–¥–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –ø—Ä–æ–±–ª–µ–º —Å —Å–∏–º–≤–æ–ª–∞–º–∏
        val encodedMessage = URLEncoder.encode(message, "UTF-8")
        val url = "$BASE_URL$botToken/sendMessage?chat_id=$chatId&text=$encodedMessage"

        val request = Request.Builder()
            .url(url)
            .get()
            .build()

        return try {
            val response = client.newCall(request).execute()
            val success = response.isSuccessful
            if (!success) {
                Log.w(TAG, "üì° –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: ${response.code} ${response.message}")
            }
            success
        } catch (e: Exception) {
            Log.e(TAG, "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ Telegram API", e)
            false
        }
    }
}
